name: Generator for CraftBukkit ambient type

# Controls when the action will run.
on:
  # TODO: this section

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          # some legacy version will not accept newer JDK
          - java: 11
            id: "1.16.5"
          - java: 11
            id: "1.16.4"
          - java: 11
            id: "1.16.3"
          - java: 11
            id: "1.16.2"
          - java: 11
            id: "1.16.1"
          - java: 11
            id: "1.15.2"
          - java: 11
            id: "1.15.1"
          - java: 11
            id: "1.15"
          - java: 11
            id: "1.14.4"
          - java: 11
            id: "1.14.3"
          - java: 11
            id: "1.14.2"
          - java: 11
            id: "1.14.1"
          - java: 11
            id: "1.14"
          - java: 11
            id: "1.13.2"
          - java: 11
            id: "1.13.1"
          - java: 11
            id: "1.13"
          - java: 8
            id: "1.12.2"
          - java: 8
            id: "1.12.1"
          - java: 8
            id: "1.12"
          - java: 8
            id: "1.11.2"
          - java: 8
            id: "1.11.1"
          - java: 8
            id: "1.11"
          - java: 8
            id: "1.10.2"
          - java: 8
            id: "1.9.4"
          - java: 8
            id: "1.9.2"
          - java: 8
            id: "1.9"
          - java: 8
            id: "1.8.8"

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: dig directory
        run: |
          cd $GITHUB_WORKSPACE
          mkdir skeleton
          cd skeleton
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Install Java 8 if needed
        run: |
          sudo update-alternatives --set java /usr/lib/jvm/adoptopenjdk-8-hotspot-amd64/bin/java
          # sudo apt-get install openjdk-8-jre
        if: matrix.java == 8
      - name: Install Java 11 if needed
        run: |
          sudo update-alternatives --set java /usr/lib/jvm/adoptopenjdk-11-hotspot-amd64/bin/java
          # sudo apt-get install openjdk-11-jre
        if: matrix.java == 11
      - name: check Java version
        run: |
          sudo update-alternatives --list java
          sudo update-alternatives --display java
          sudo update-alternatives --get-selections | grep java
          java -version
      - name: Get BuildTools.jar
        run: |
          wget https://hub.spigotmc.org/jenkins/job/BuildTools/lastSuccessfulBuild/artifact/target/BuildTools.jar
      - name: Get ImplementationDropper.jar
        run: |
          wget https://github.com/KisaragiEffective/b1nar1e5/blob/master/bukkit-fake-bindings.jar?raw=true -O ImplementationDropper.jar
      - name: Test dropper
        run: |
          # NOTE! Strip CRLF or WON'T WORK !!
          main=$(unzip -p ImplementationDropper.jar META-INF/MANIFEST.MF | grep "Main-Class:" | sed "s/Main-Class: //" | tr -d '\n\r')
          java -cp ./ImplementationDropper.jar "$main" || echo "Test OK"
      - name: Check directory structure
        run: |
          ls -l
      - name: Pre-work
        run: |
          echo "[CraftBukkit/Build/v${{matrix.id}}] build started"
      - name: Run BuildTools.jar
        run: |
          java -jar BuildTools.jar --rev ${{matrix.id}} --compile craftbukkit
      - name: Check craftbukkit.jar
        run: |
          ls | grep -E "\.jar"
          need=$(ls | grep -F craftbukkit-${{matrix.id}}.jar | ruby -e "puts gets == nil")
          if [ $need = "true" ]; then
            echo "artifact not found, will copy"
            from=CraftBukkit/target/$(ls CraftBukkit/target | (grep -E "\.jar$" || exit 12) | head -n 1)
            cp $from craftbukkit-${{matrix.id}}.jar
          else
            echo "found, no need to copy"
          fi
          
      - name: Post-work
        run: |
          echo "[CraftBukkit/Build/v${{matrix.id}}] build finished"
          ls -l
      - name: unzip craftbukkit.jar
        run: |
          unzip craftbukkit-${{matrix.id}}.jar -d __craftbukkit
      - name: show craftbukkit directory
        run: |
          ls __craftbukkit/org/bukkit/craftbukkit
      - name: Inspect ImplementationDropper.jar
        run: |
          unzip ImplementationDropper.jar -d __dropper
          echo "__dropper:"
          ls __dropper
          echo "executable:"
          ls __dropper/com/github/kisaragieffective/fakebinding
      - name: Run ImplementationDropper.jar
        run: |
          cb=$(ls __craftbukkit/org/bukkit/craftbukkit | grep v | head -n 1 | tr -d '\n')
          echo "package: org.bukkit.craftbukkit.$cb"
          main=$(unzip -p ImplementationDropper.jar META-INF/MANIFEST.MF | grep "Main-Class:" | sed "s/Main-Class: //" | tr -d '\n\r')
          echo "main class: $main"
          cp='ImplementationDropper.jar:craftbukkit-${{matrix.id}}.jar'
          echo "classpath: $cp"
          # https://stackoverflow.com/questions/18413014/run-a-jar-file-from-the-command-line-and-specify-classpath
          java -cp "$cp" "$main" "__craftbukkit/org/bukkit/craftbukkit/$cb" __dest__
      - name: Rezip
        run: |
          zip -r craftbukkit-${{matrix.id}}.d.jar __dest__
      - name: Remove temporary files
        run: |
          files=$(ls | grep -v "craftbukkit-${{matrix.id}}.d.jar")
          for file in "$files[@]"; do
            rm -r file
          done
      - name: Commit then push
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Update"
          git push
